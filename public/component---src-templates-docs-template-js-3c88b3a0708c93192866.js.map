{"version":3,"sources":["webpack:///./src/components/doc/header.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout/doc.js","webpack:///./src/templates/docsTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["DocHeader","_ref","siteTitle","react_default","a","createElement","className","gatsby_browser_entry","to","href","propTypes","PropTypes","string","defaultProps","SideBar","query","render","data","edges","allMarkdownRemark","Fragment","map","element","i","key","node","frontmatter","title","chapter_title","path","_3797270644","DocLayout","children","header","site","siteMetadata","sidebar","_4025341757","isRequired","Template","markdownRemark","html","hljs","initHighlightingOnLoad","layout_doc","chapter_path","dangerouslySetInnerHTML","__html","__webpack_require__","d","__webpack_exports__","pageQuery","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"uJAIMA,EAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACjBC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAWH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAKN,IACvCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,gBAAgBE,GAAG,KAAnC,QACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,gBAAgBE,GAAG,iBAAnC,QACAL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBG,KAAK,6DAAlC,aAKHT,EAAUU,UAAY,CACrBR,UAAWS,IAAUC,QAGtBZ,EAAUa,aAAe,CACxBX,UAAS,oBAGKF,0BCuBAc,EA3CC,kBACfX,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEQ,MAAK,aAkBLC,OAAS,SAAAC,GAAQ,IAERC,EADsBD,EAAtBE,kBACAD,MACR,OACCf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgB,SAAA,KACEF,EAAMG,IAAI,SAACC,EAASC,GAAV,OAAgBpB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMiB,IAAKD,EAAGjB,UAAWgB,EAAQG,KAAKC,YAAYC,QAAUL,EAAQG,KAAKC,YAAYE,cAAgB,uBAAyB,WAAapB,GAAIc,EAAQG,KAAKC,YAAYG,MAAOP,EAAQG,KAAKC,YAAYC,WAxBxOV,KAAAa,KCIKC,EAAY,SAAA9B,GAAA,IAAG+B,EAAH/B,EAAG+B,SAAH,OACjB7B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACCQ,MAAK,aAULC,OAAQ,SAAAC,GAAI,OACXd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgB,SAAA,KACCjB,EAAAC,EAAAC,cAAC4B,EAAD,CAAW/B,UAAWe,EAAKiB,KAAKC,aAAaR,QAC7CxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAAC+B,EAAD,OAEDjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZ0B,MAnBPf,KAAAoB,KA2BDN,EAAUrB,UAAY,CACrBsB,SAAUrB,IAAUc,KAAKa,YAGXP,iCChCA,SAASQ,EAATtC,GAEZ,IACMuC,EADNvC,EADFgB,KAEQuB,eACAd,EAAsBc,EAAtBd,YAAae,EAASD,EAATC,KAIrB,OAFAC,IAAKC,yBAGJxC,EAAAC,EAAAC,cAACuC,EAAD,KACCzC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAiBoB,EAAYC,OAC3CxB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,kBAAkBE,GAAIkB,EAAYmB,cAAgBnB,EAAYE,eAC9EzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBwC,wBAAyB,CAAEC,OAAQN,MApBxEO,EAAAC,EAAAC,EAAA,4BAAAX,IAAAS,EAAAC,EAAAC,EAAA,8BAAAC,IA0BO,IAAMA,EAAS,+CC1BtBH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,IAAAW,EAAAX,EAAAO,EAAAG,GAAAV,EAAAC,EAAAC,EAAA,sBAAAS,EAAAvD,IAAA4C,EAAA,SAYMY,EAAqBC,IAAMC,cAAc,IAEzCV,EAAc,SAAAW,GAAK,OACvBT,EAAAlD,EAAAC,cAACuD,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAM9C,MACLgD,EAAgBF,EAAMhD,QAAUkD,EAAgBF,EAAMhD,OAAOE,MAEtD8C,EAAM/C,QAAU+C,EAAM/B,UAC5B+B,EAAM9C,KAAO8C,EAAM9C,KAAKA,KAAOgD,EAAgBF,EAAMhD,OAAOE,MAGvDqC,EAAAlD,EAAAC,cAAA,uCA4Bf+C,EAAY1C,UAAY,CACtBO,KAAMN,IAAUuD,OAChBnD,MAAOJ,IAAUC,OAAO0B,WACxBtB,OAAQL,IAAUwD,KAClBnC,SAAUrB,IAAUwD,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAxE,GAAkB,IAAfyE,EAAezE,EAAfyE,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOjB,IAAMxD,cAAc0E,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiB/D,UAAY,CAC3BgE,SAAU/D,IAAUwE,MAAM,CACxBL,SAAUnE,IAAUC,OAAO0B,aAC1BA,YAGUmC","file":"component---src-templates-docs-template-js-3c88b3a0708c93192866.js","sourcesContent":["import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst DocHeader = ({ siteTitle }) => (\r\n\t<header className='docheader'>\r\n\t\t<h3 className='docTitle'><Link to='/'>{siteTitle}</Link></h3>\r\n\t\t<div className='docHeaderLinks'>\r\n\t\t\t<Link className='docHeaderLink' to='/'>Home</Link>\r\n\t\t\t<Link className='docHeaderLink' to='/docs/classes'>Docs</Link>\r\n\t\t\t<a className='docHeaderLink' href='https://github.com/gdmgent-1819-csse2/01-webgl2-Vl-Wouter'>Github</a>\r\n\t\t</div>\r\n\t</header>\r\n)\r\n\r\nDocHeader.propTypes = {\r\n\tsiteTitle: PropTypes.string,\r\n}\r\n\r\nDocHeader.defaultProps = {\r\n\tsiteTitle: `WebGL2 - CSSE II`\r\n}\r\n\r\nexport default DocHeader","import React from \"react\"\r\nimport { graphql, StaticQuery, Link } from \"gatsby\"\r\n\r\nconst SideBar = () => (\r\n\t<StaticQuery\r\n\t\t\tquery={graphql`\r\n\t\t\t\tquery DocsTitleQuery {\r\n\t\t\t\t\tallMarkdownRemark(sort: { order: ASC, fields: [frontmatter___chapter] }) {\r\n\t\t\t\t\t\tedges {\r\n\t\t\t\t\t\t\tnode {\r\n\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\tfrontmatter {\r\n\t\t\t\t\t\t\t\t\tpath\r\n\t\t\t\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\t\t\t\tchapter\r\n\t\t\t\t\t\t\t\t\tchapter_title\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t`}\r\n\r\n\t\t\trender={ data => {\r\n\t\t\t\tconst { allMarkdownRemark } = data\r\n\t\t\t\tconst { edges } = allMarkdownRemark\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{edges.map((element, i) => <Link key={i} className={element.node.frontmatter.title === element.node.frontmatter.chapter_title ? \"sideLink chapterLink\" : \"sideLink\"}  to={element.node.frontmatter.path}>{element.node.frontmatter.title}</Link>)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t/>\r\n)\r\n\t// console.log(edges)\r\n  // const Posts = edges\r\n  //   .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\r\n  //   .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\r\n\r\n//   return (\r\n\t\t\r\n// \t\t\t<div>{Posts}</div>\r\n// \t)\r\n// }\r\n\r\nexport default SideBar\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport DocHeader from '../doc/header'\r\n\r\nimport \"./doc.css\"\r\nimport SideBar from '../sidebar';\r\n\r\nconst DocLayout = ({ children }) => (\r\n\t<StaticQuery \r\n\t\tquery={graphql`\r\n\t\t\tquery DocTitleQuery {\r\n\t\t\t\tsite {\r\n\t\t\t\t\tsiteMetadata {\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`}\r\n\t\t\r\n\t\trender={data => (\r\n\t\t\t<>\r\n\t\t\t\t<DocHeader siteTitle={data.site.siteMetadata.title} />\r\n\t\t\t\t<main className='docs-container'>\r\n\t\t\t\t\t<div className='docs-sidebar'>\r\n\t\t\t\t\t\t<SideBar />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='docs-content'>\r\n\t\t\t\t\t\t{ children }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t</>\r\n\t\t)}\r\n\t\t/>\r\n)\r\n\r\nDocLayout.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default DocLayout","import React from 'react'\r\nimport { graphql, Link } from \"gatsby\"\r\nimport DocLayout from '../components/layout/doc';\r\nimport hljs from 'highlight.js'\r\n// import javascript from 'highlight.js/lib/languages/javascript'\r\n\r\nimport 'highlight.js/styles/github.css'\r\n\r\nexport default function Template({\r\n\tdata,\r\n}) {\r\n\tconst { markdownRemark } = data\r\n\tconst { frontmatter, html } = markdownRemark\r\n\t// hljs.registerLanguage('language-js', javascript)\r\n\thljs.initHighlightingOnLoad()\r\n\t\r\n\treturn (\r\n\t\t<DocLayout>\r\n\t\t\t<h1 className='docPostTitle'>{ frontmatter.title }</h1>\r\n\t\t\t<Link className='docPostSubTitle' to={frontmatter.chapter_path} >{frontmatter.chapter_title}</Link>\r\n\t\t\t<div className=\"doc-post-content\" dangerouslySetInnerHTML={{ __html: html }}>\r\n\t\t\t</div>\r\n\t\t</DocLayout>\r\n\t)\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n\tquery($path: String!) {\r\n\t\tmarkdownRemark(frontmatter: { path: { eq: $path }}) {\r\n\t\t\thtml\r\n\t\t\tfrontmatter {\r\n\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\r\n\t\t\t\tpath\r\n\t\t\t\ttitle\r\n\t\t\t\tchapter\r\n\t\t\t\tchapter_title\r\n\t\t\t\tchapter_path\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}