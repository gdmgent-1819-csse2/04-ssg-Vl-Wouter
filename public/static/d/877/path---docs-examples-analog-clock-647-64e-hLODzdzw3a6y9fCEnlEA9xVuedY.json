{"data":{"markdownRemark":{"html":"<p>This example is a very simple analog clock. It consists of pixels that turn around a central point. To make this example work, we will focus on the function that creates our clock every time the canvas updates:</p>\n<pre><code class=\"language-js\">updateCanvasHandler(event) {\n        console.log('updateCanvas')\n        this.clearData()\n\n        // White point in the middle\n        this.data.positions.push(0, 0)\n        this.data.colors.push(...this.colors.white)\n\n        const vector = new Vector2(.5, 0)\n        this.data.positions.push(vector.x, vector.y)\n        this.data.colors.push(...this.colors.red)\n\n        const slots = 12;\n        const now = new Date()\n\n        for(let i = 0; i &#x3C; slots; i++) {\n          vector.rot(30)\n          this.data.positions.push(vector.x,vector.y)\n          this.data.colors.push(...this.colors['blue'])\n        }\n\n        const seconds = new Vector2(0, .4)\n        seconds.rot(-6 * now.getSeconds())\n        this.data.positions.push(seconds.x, seconds.y)\n        this.data.colors.push(...this.colors['yellow'])\n\n        const minutes = new Vector2(0, .5)\n        minutes.rot(now.getMinutes() * -6)\n        this.data.positions.push(minutes.x, minutes.y)\n        this.data.colors.push(...this.colors['white'])\n\n        const hours = new Vector2(0, .35)\n        hours.rot(now.getHours() * -6)\n        this.data.positions.push(hours.x, hours.y)\n        this.data.colors.push(...this.colors['magenta'])\n\n        this.drawScene()\n        }\n</code></pre>","frontmatter":{"date":"April 14, 2019","path":"/docs/examples/analog-clock","title":"Analog Clock","chapter":2.1,"chapter_title":"Examples","chapter_path":"/docs/examples"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}