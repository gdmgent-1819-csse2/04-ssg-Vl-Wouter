{"data":{"markdownRemark":{"html":"<p>The first class we will build is the vector class. A vector can be described as a point in space, depending on dimensions.<br>\nThese vectors are the basis of our example, but they will also need the help of the <a href=\"/docs/classes/matrix-classes\">Matrix</a> to function properly.</p>\n<h2>The two-dimensional vector</h2>\n<p>This is the most basic vector. It is a vector put in a two-dimensional space. The vector only has two coordinates: x and y. These have to be filled in in order to make this work.<br>\nLet's start by creating the class and a constructor:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Vector2</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xpos<span class=\"token punctuation\">,</span> ypos</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> xpos\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> ypos\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The vector class also requires functions to make it do what we want it to do.</p>\n<h2>Functions</h2>\n<h3>Basic vector operations</h3>\n<p>The vector has a few basic operations like <a href=\"#add-function\">add()</a>, <a href=\"#sub-function\">sub()</a> and <a href=\"#scalar-function\">scalar()</a></p>\n<h4><a name=\"add-function\"></a> add()</h4>\n<p>The add function allows us to add the coordinates of 2 vectors. Exactly like the name of the function says</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Vector2</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xpos<span class=\"token punctuation\">,</span> ypos</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">secondVector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> secondVector<span class=\"token punctuation\">.</span>x\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> secondVector<span class=\"token punctuation\">.</span>y\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>What happens in this function is the following. We'll call this function with a second vector. The function will then add the coordinates of the second vector to the first vector, to move that first vector to a different place in our two-dimensional space.</p>\n<h4><a name=\"sub-function\"></a> sub()</h4>\n<p>The sub() function is built similarily to the add() function, but it's function is the exact opposite. Instead of adding a second vector to it to move the original vector, it will subtract the second vector from the original one.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Vector2</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xpos<span class=\"token punctuation\">,</span> ypos</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token operator\">...</span>\n\n\t<span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">secondVector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">-=</span> secondVector<span class=\"token punctuation\">.</span>x\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">-=</span> secondVector<span class=\"token punctuation\">.</span>y\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4><a name=\"scalar-function\"></a> scalar()</h4>\n<p>Scalar also is a basic function for our vector class. It allows us to multiply the coordinates of the vector by any given amount.<br>\nThe construction of this function is similar to the two mentioned above, but instead of a second vector, we will pass an integer value to this.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Vector2</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xpos<span class=\"token punctuation\">,</span> ypos</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token operator\">...</span>\n\n\t<span class=\"token function\">scalar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">scale</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">*=</span> scale\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">*=</span> scale\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Advanced vector operations</h3>\n<p>These are the more complex operations within the vector. These operations are <a href=\"#norm-function\">norm()</a>, <a href=\"#dot-function\">dot()</a> and <a href=\"#rot-function\">rot()</a>.</p>\n<h4><a name=\"norm-function\"></a> norm()</h4>\n<p>The norm function calculates and returns the length of a vector using both the x and y position of said vector.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Vector2</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xpos<span class=\"token punctuation\">,</span> ypos</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token operator\">...</span>\n\n\t<span class=\"token function\">norm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>It looks a bit more complicated than it actually is. What the function does is take the square number of both the x and y coordinate, add these together and take the square root of that number. The result is the length of the vector.</p>\n<h4><a name=\"dot-function\"></a> dot()</h4>\n<p>This function will calculate the dot product of 2 vectors. It multiplies the x coordinate of the first vector with the x coordinate of the second vector, and does the same for the y coordinate. It then returns the sum of the multiplied coordinates as a result.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Vector2</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xpos<span class=\"token punctuation\">,</span> ypos</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token operator\">...</span>\n\n\t<span class=\"token function\">dot</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">secondVector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> secondVector<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> secondVector<span class=\"token punctuation\">.</span>y\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4><a name=\"rot-function\"></a> rot()</h4>\n<p><strong>Warning:</strong> This function makes use of the Matrix2 class, which hasn't been made yet. No worries, if you keep following these docs, everything will work fine.</p>\n<p>The rot function will, as the name suggests, rotate a vector around the center of the defined space. the degrees you pass onto it will be the amount of <strong>anticlockwise</strong> rotation given to the vector.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Vector2</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xpos<span class=\"token punctuation\">,</span> ypos</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token operator\">...</span>\n\n\t<span class=\"token function\">rot</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">α</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> matrix <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Matrix2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\tmatrix<span class=\"token punctuation\">.</span><span class=\"token function\">rot</span><span class=\"token punctuation\">(</span>α<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>A quick overview</h3>\n<p>Here's a last look at the vector class:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/** Class representing a two-dimensional vector. */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Vector2</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * Create a vector.\n     * @param {Number} x - The horizontal vector component.\n     * @param {Number} y - The vertical vector component.\n     */</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Calculate the length of the vector.\n     * @return {Number} The length of the vector\n     */</span>\n    <span class=\"token function\">norm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Addition of a vector to the current vector.\n     * @param {Vector2} secondVector - The second vector.\n     */</span>\n    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">secondVector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> secondVector<span class=\"token punctuation\">.</span>x\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> secondVector<span class=\"token punctuation\">.</span>y\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Subtraction of a vector from the current vector.\n     * @param {Vector2} secondVector - The second vector.\n     */</span>\n    <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">secondVector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">-=</span> secondVector<span class=\"token punctuation\">.</span>x\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">-=</span> secondVector<span class=\"token punctuation\">.</span>y\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Scalar multiplication. Multiplies a vector by a scalar.\n     * @param {Number} scale - The scalar value.\n     */</span>\n    <span class=\"token function\">scalar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">scale</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">*=</span> scale\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">*=</span> scale\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Calculate the dot product of the current vector and another vector.\n     * @param {Vector2} secondVector - The second vector.\n     * @return {Number} the dot product of the wzo\n     */</span>\n    <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">secondVector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> secondVector<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> secondVector<span class=\"token punctuation\">.</span>y\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Rotate the vector around the origin.\n     * @param {Number} α - The anticlockwise angle in degrees.\n     */</span>\n    <span class=\"token function\">rot</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">α</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> matrix <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Matrix2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        matrix<span class=\"token punctuation\">.</span><span class=\"token function\">rot</span><span class=\"token punctuation\">(</span>α<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":"April 14, 2019","path":"/docs/classes/vector-classes","title":"Vector Classes","chapter":1.1,"chapter_title":"Classes","chapter_path":"docs/classes"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}